// <auto-generated />
using System;
using FITCCRS2App.Services.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FITCCRS2App.Services.Migrations
{
    [DbContext(typeof(FITCCRS2v2Context))]
    partial class FITCCRS2v2ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FITCCRS2App.Services.Database.Agendum", b =>
                {
                    b.Property<int>("AgendaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AgendaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AgendaId"), 1L, 1);

                    b.Property<int?>("Dan")
                        .HasColumnType("int");

                    b.Property<int?>("TakmicenjeId")
                        .HasColumnType("int")
                        .HasColumnName("TakmicenjeID");

                    b.HasKey("AgendaId");

                    b.HasIndex(new[] { "TakmicenjeId" }, "IX_Agenda_TakmicenjeID");

                    b.ToTable("Agendums");

                    b.HasData(
                        new
                        {
                            AgendaId = 1,
                            Dan = 1,
                            TakmicenjeId = 1
                        },
                        new
                        {
                            AgendaId = 2,
                            Dan = 2,
                            TakmicenjeId = 1
                        });
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"), 1L, 1);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CityId");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            CountryId = 1,
                            Name = "Mostar",
                            ZipCode = ""
                        },
                        new
                        {
                            CityId = 2,
                            CountryId = 1,
                            Name = "Sarajevo",
                            ZipCode = ""
                        },
                        new
                        {
                            CityId = 3,
                            CountryId = 1,
                            Name = "Tuzla",
                            ZipCode = ""
                        },
                        new
                        {
                            CityId = 4,
                            CountryId = 1,
                            Name = "Capljina",
                            ZipCode = ""
                        },
                        new
                        {
                            CityId = 5,
                            CountryId = 1,
                            Name = "Neum",
                            ZipCode = ""
                        });
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            Name = "Bosna i Hercegovina"
                        },
                        new
                        {
                            CountryId = 2,
                            Name = "Crna Gora"
                        },
                        new
                        {
                            CountryId = 3,
                            Name = "Njemacka"
                        });
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Dogadjaj", b =>
                {
                    b.Property<int>("DogadjajId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("DogadjajID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DogadjajId"), 1L, 1);

                    b.Property<int?>("AgendaId")
                        .HasColumnType("int")
                        .HasColumnName("AgendaID");

                    b.Property<DateTime?>("Kraj")
                        .HasColumnType("datetime");

                    b.Property<string>("Lokacija")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Napomena")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Naziv")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("Pocetak")
                        .HasColumnType("datetime");

                    b.Property<int?>("Trajanje")
                        .HasColumnType("int");

                    b.HasKey("DogadjajId");

                    b.HasIndex(new[] { "AgendaId" }, "IX_Dogadjaj_AgendaID");

                    b.ToTable("Dogadjaj", (string)null);

                    b.HasData(
                        new
                        {
                            DogadjajId = 1,
                            AgendaId = 1,
                            Kraj = new DateTime(2022, 5, 1, 10, 30, 0, 0, DateTimeKind.Unspecified),
                            Lokacija = "Amfiteatar 1",
                            Naziv = "Otvaranje",
                            Pocetak = new DateTime(2022, 5, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Trajanje = 30
                        },
                        new
                        {
                            DogadjajId = 2,
                            AgendaId = 1,
                            Kraj = new DateTime(2022, 5, 1, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            Lokacija = "Amfiteatar 1",
                            Naziv = "Tribine",
                            Pocetak = new DateTime(2022, 5, 1, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Trajanje = 90
                        },
                        new
                        {
                            DogadjajId = 3,
                            AgendaId = 1,
                            Kraj = new DateTime(2022, 5, 1, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            Lokacija = "Amfiteatar 3",
                            Naziv = "Inovacije",
                            Pocetak = new DateTime(2022, 5, 1, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Trajanje = 90
                        },
                        new
                        {
                            DogadjajId = 4,
                            AgendaId = 1,
                            Kraj = new DateTime(2022, 5, 1, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            Lokacija = "Amfiteatar 2",
                            Naziv = "Programiranja",
                            Pocetak = new DateTime(2022, 5, 1, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Trajanje = 90
                        },
                        new
                        {
                            DogadjajId = 5,
                            AgendaId = 1,
                            Kraj = new DateTime(2022, 5, 1, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            Lokacija = "AKS",
                            Naziv = "Programiranja igara",
                            Pocetak = new DateTime(2022, 5, 1, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Trajanje = 90
                        },
                        new
                        {
                            DogadjajId = 6,
                            AgendaId = 2,
                            Kraj = new DateTime(2022, 5, 1, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            Lokacija = "Amfiteatar 1",
                            Naziv = "Proglasenje pobjednjika",
                            Pocetak = new DateTime(2022, 5, 2, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Trajanje = 90
                        },
                        new
                        {
                            DogadjajId = 7,
                            AgendaId = 2,
                            Kraj = new DateTime(2022, 5, 1, 13, 0, 0, 0, DateTimeKind.Unspecified),
                            Lokacija = "Amfiteatar 1",
                            Naziv = "Zatvaranje",
                            Pocetak = new DateTime(2022, 5, 2, 12, 30, 0, 0, DateTimeKind.Unspecified),
                            Trajanje = 30
                        });
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Kategorija", b =>
                {
                    b.Property<int>("KategorijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KategorijaID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KategorijaId"), 1L, 1);

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Opis")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("TakmicenjeId")
                        .HasColumnType("int")
                        .HasColumnName("TakmicenjeID");

                    b.HasKey("KategorijaId");

                    b.HasIndex(new[] { "TakmicenjeId" }, "IX_Kategorija_TakmicenjeID");

                    b.ToTable("Kategorija", (string)null);

                    b.HasData(
                        new
                        {
                            KategorijaId = 1,
                            Naziv = "Programiraje",
                            Opis = "Takmicenje u oblasti poznavanja programiranja",
                            TakmicenjeId = 1
                        },
                        new
                        {
                            KategorijaId = 2,
                            Naziv = "Inovacije",
                            Opis = "Kreiranje najinovativnijeg rjesenja",
                            TakmicenjeId = 1
                        },
                        new
                        {
                            KategorijaId = 3,
                            Naziv = "Programiraje igara",
                            Opis = "Takmicenje u oblasti poznavanja programiranja igara",
                            TakmicenjeId = 1
                        });
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Komisija", b =>
                {
                    b.Property<int>("KomisijaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("komisijaId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KomisijaId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("Ime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ime");

                    b.Property<int?>("KategorijaId")
                        .HasColumnType("int")
                        .HasColumnName("kategorijaId");

                    b.Property<string>("Prezime")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("prezime");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("KomisijaId");

                    b.HasIndex("KategorijaId");

                    b.ToTable("Komisija", (string)null);
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Kriterij", b =>
                {
                    b.Property<int>("KriterijId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("KriterijID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KriterijId"), 1L, 1);

                    b.Property<int?>("KategorijaId")
                        .HasColumnType("int")
                        .HasColumnName("KategorijaID");

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Vrijednost")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("KriterijId");

                    b.HasIndex(new[] { "KategorijaId" }, "IX_Kriterij_KategorijaID");

                    b.ToTable("Kriterij", (string)null);

                    b.HasData(
                        new
                        {
                            KriterijId = 1,
                            KategorijaId = 2,
                            Naziv = "Inovativnost",
                            Vrijednost = "50"
                        },
                        new
                        {
                            KriterijId = 2,
                            KategorijaId = 2,
                            Naziv = "Implementacija",
                            Vrijednost = "50"
                        });
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Napomena", b =>
                {
                    b.Property<int>("NapomenaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NapomenaId"), 1L, 1);

                    b.Property<string>("Poruka")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UsernameTakmicar")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("NapomenaId");

                    b.ToTable("Napomena", (string)null);

                    b.HasData(
                        new
                        {
                            NapomenaId = 1,
                            Poruka = "poruka 1",
                            UserName = "sponzor",
                            UsernameTakmicar = "bablamija"
                        },
                        new
                        {
                            NapomenaId = 2,
                            Poruka = "poruka 2",
                            UserName = "sponzor",
                            UsernameTakmicar = "bablamija"
                        },
                        new
                        {
                            NapomenaId = 3,
                            Poruka = "poruka 3",
                            UserName = "sponzor",
                            UsernameTakmicar = "bablamija"
                        });
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Predavac", b =>
                {
                    b.Property<int>("PredavacId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PredavacId"), 1L, 1);

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ime")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Prezime")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ustanova")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Zvanje")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PredavacId");

                    b.ToTable("Predavac", (string)null);

                    b.HasData(
                        new
                        {
                            PredavacId = 1,
                            Email = "neko.ne@nesto.ba",
                            Ime = "Neko",
                            Prezime = "Neko",
                            Ustanova = "Firma",
                            Zvanje = "Software inzenjer"
                        },
                        new
                        {
                            PredavacId = 2,
                            Email = "neko.dr@nesto.ba",
                            Ime = "Neko",
                            Prezime = "Drugi",
                            Ustanova = "Firma nova",
                            Zvanje = "Software inzenjer"
                        });
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.PredavacDogadjaj", b =>
                {
                    b.Property<int>("DogadjajId")
                        .HasColumnType("int");

                    b.Property<int>("PredavacId")
                        .HasColumnType("int");

                    b.HasKey("DogadjajId", "PredavacId");

                    b.HasIndex("PredavacId");

                    b.ToTable("PredavacDogadjaj", (string)null);

                    b.HasData(
                        new
                        {
                            DogadjajId = 2,
                            PredavacId = 1
                        },
                        new
                        {
                            DogadjajId = 2,
                            PredavacId = 2
                        });
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Projekat", b =>
                {
                    b.Property<int>("ProjekatId")
                        .HasColumnType("int")
                        .HasColumnName("ProjekatID");

                    b.Property<int>("KategorijaId")
                        .HasColumnType("int")
                        .HasColumnName("KategorijaID");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Opis")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("TimId")
                        .HasColumnType("int")
                        .HasColumnName("TimID");

                    b.HasKey("ProjekatId");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("TimId");

                    b.ToTable("Projekat", (string)null);

                    b.HasData(
                        new
                        {
                            ProjekatId = 1,
                            KategorijaId = 2,
                            Naziv = "Neki projekat",
                            Opis = "Inovativan projekat. Code dostupan na githubu.",
                            TimId = 1
                        });
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Rezultat", b =>
                {
                    b.Property<int>("RezultatId")
                        .HasColumnType("int")
                        .HasColumnName("RezultatID");

                    b.Property<int>("Bod")
                        .HasColumnType("int");

                    b.Property<string>("Napomena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjekatId")
                        .HasColumnType("int")
                        .HasColumnName("ProjekatID");

                    b.HasKey("RezultatId");

                    b.HasIndex("ProjekatId");

                    b.ToTable("Rezultat", (string)null);

                    b.HasData(
                        new
                        {
                            RezultatId = 1,
                            Bod = 90,
                            Napomena = "Neka napomena",
                            ProjekatId = 1
                        });
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Skategorije", b =>
                {
                    b.Property<int>("SkategorijeId")
                        .HasColumnType("int")
                        .HasColumnName("SKategorijeID");

                    b.Property<int?>("Iznos")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("SkategorijeId");

                    b.ToTable("SKategorije", (string)null);

                    b.HasData(
                        new
                        {
                            SkategorijeId = 1,
                            Iznos = 2000,
                            Naziv = "Zlatni"
                        },
                        new
                        {
                            SkategorijeId = 2,
                            Iznos = 1500,
                            Naziv = "Srebreni"
                        },
                        new
                        {
                            SkategorijeId = 3,
                            Iznos = 1000,
                            Naziv = "Bronzani"
                        });
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Sponzor", b =>
                {
                    b.Property<int>("SponzorId")
                        .HasColumnType("int")
                        .HasColumnName("SponzorID");

                    b.Property<int?>("Godina")
                        .HasColumnType("int");

                    b.Property<int?>("KategorijaId")
                        .HasColumnType("int")
                        .HasColumnName("KategorijaID");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("SkategorijeId")
                        .HasColumnType("int")
                        .HasColumnName("SKategorijeID");

                    b.HasKey("SponzorId");

                    b.HasIndex("KategorijaId");

                    b.HasIndex("SkategorijeId");

                    b.ToTable("Sponzor", (string)null);

                    b.HasData(
                        new
                        {
                            SponzorId = 1,
                            Godina = 2022,
                            KategorijaId = 2,
                            Naziv = "Sponzor",
                            SkategorijeId = 1
                        },
                        new
                        {
                            SponzorId = 2,
                            Godina = 2022,
                            Naziv = "Sponzor",
                            SkategorijeId = 2
                        });
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Takmicenje", b =>
                {
                    b.Property<int>("TakmicenjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("TakmicenjeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TakmicenjeId"), 1L, 1);

                    b.Property<int?>("BrojDana")
                        .HasColumnType("int");

                    b.Property<int?>("Godina")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Kraj")
                        .HasColumnType("datetime");

                    b.Property<string>("Naziv")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("Pocetak")
                        .HasColumnType("datetime");

                    b.Property<string>("Slika")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slogan")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TakmicenjeId");

                    b.ToTable("Takmicenje", (string)null);

                    b.HasData(
                        new
                        {
                            TakmicenjeId = 1,
                            BrojDana = 2,
                            Godina = 2022,
                            Kraj = new DateTime(2022, 5, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Naziv = "FIT Coding Challenge 2022",
                            Pocetak = new DateTime(2022, 5, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Slogan = " "
                        });
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Tim", b =>
                {
                    b.Property<int>("TimId")
                        .HasColumnType("int")
                        .HasColumnName("TimID");

                    b.Property<int>("BrojClanova")
                        .HasColumnType("int");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TakmicenjeId")
                        .HasColumnType("int")
                        .HasColumnName("TakmicenjeID");

                    b.HasKey("TimId");

                    b.HasIndex("TakmicenjeId");

                    b.ToTable("Tim", (string)null);

                    b.HasData(
                        new
                        {
                            TimId = 1,
                            BrojClanova = 1,
                            Naziv = "Tim",
                            TakmicenjeId = 1
                        });
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"), 1L, 1);

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CitizenshipId")
                        .HasColumnType("int");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.HasIndex("CitizenshipId");

                    b.HasIndex("CityId");

                    b.ToTable("User", (string)null);

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            BirthDate = new DateTime(2024, 2, 5, 18, 53, 13, 83, DateTimeKind.Local).AddTicks(5530),
                            CitizenshipId = 1,
                            CityId = 1,
                            CreateDate = new DateTime(2024, 2, 5, 18, 53, 13, 83, DateTimeKind.Local).AddTicks(5490),
                            Email = "mellimostar@gmail.com",
                            FirstName = "Melissa",
                            Gender = 1,
                            Image = "",
                            LastName = "Memic",
                            Password = "19a2854144b63a8f7617a6f225019b12",
                            Phone = "+333 22 3 332",
                            Username = "meli",
                            WebSite = "http://google.com"
                        },
                        new
                        {
                            UserId = 2,
                            BirthDate = new DateTime(2024, 2, 5, 18, 53, 13, 83, DateTimeKind.Local).AddTicks(5550),
                            CitizenshipId = 1,
                            CityId = 2,
                            CreateDate = new DateTime(2024, 2, 5, 18, 53, 13, 83, DateTimeKind.Local).AddTicks(5550),
                            Email = "lamija.babovic@edu.fit.ba",
                            FirstName = "lamija",
                            Gender = 1,
                            Image = "",
                            LastName = "Babovic",
                            Password = "19a2854144b63a8f7617a6f225019b12",
                            Phone = "+333 22 3 332",
                            Username = "lamija",
                            WebSite = "http://google.com"
                        },
                        new
                        {
                            UserId = 3,
                            BirthDate = new DateTime(2024, 2, 5, 18, 53, 13, 83, DateTimeKind.Local).AddTicks(5570),
                            CitizenshipId = 1,
                            CityId = 2,
                            CreateDate = new DateTime(2024, 2, 5, 18, 53, 13, 83, DateTimeKind.Local).AddTicks(5570),
                            Email = "ziri@gmail.com",
                            FirstName = "Ziri",
                            Gender = 1,
                            Image = "",
                            LastName = "Ziri",
                            Password = "19a2854144b63a8f7617a6f225019b12",
                            Phone = "+333 22 3 332",
                            Username = "ziri",
                            WebSite = "http://google.com"
                        },
                        new
                        {
                            UserId = 4,
                            BirthDate = new DateTime(2024, 2, 5, 18, 53, 13, 83, DateTimeKind.Local).AddTicks(5590),
                            CitizenshipId = 1,
                            CityId = 3,
                            CreateDate = new DateTime(2024, 2, 5, 18, 53, 13, 83, DateTimeKind.Local).AddTicks(5580),
                            Email = "bablamija@gmail.com",
                            FirstName = "lamija",
                            Gender = 1,
                            Image = "",
                            LastName = "Bab",
                            Password = "19a2854144b63a8f7617a6f225019b12",
                            Phone = "+333 22 3 332",
                            Username = "bablamija",
                            WebSite = "http://google.com"
                        },
                        new
                        {
                            UserId = 5,
                            BirthDate = new DateTime(2024, 2, 5, 18, 53, 13, 83, DateTimeKind.Local).AddTicks(5600),
                            CitizenshipId = 1,
                            CityId = 1,
                            CreateDate = new DateTime(2024, 2, 5, 18, 53, 13, 83, DateTimeKind.Local).AddTicks(5600),
                            Email = "sponzor@gmail.com",
                            FirstName = "Sponzor",
                            Gender = 0,
                            Image = "",
                            LastName = "Sponzor",
                            Password = "19a2854144b63a8f7617a6f225019b12",
                            Phone = "+333 22 3 332",
                            Username = "sponzor",
                            WebSite = "http://google.com"
                        });
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.UserRole", b =>
                {
                    b.Property<int>("UserRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserRoleId"), 1L, 1);

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("UserRoleId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRoles");

                    b.HasData(
                        new
                        {
                            UserRoleId = 1,
                            Role = 0,
                            UserId = 1
                        },
                        new
                        {
                            UserRoleId = 2,
                            Role = 0,
                            UserId = 2
                        },
                        new
                        {
                            UserRoleId = 3,
                            Role = 1,
                            UserId = 3
                        },
                        new
                        {
                            UserRoleId = 4,
                            Role = 2,
                            UserId = 4
                        },
                        new
                        {
                            UserRoleId = 5,
                            Role = 3,
                            UserId = 5
                        });
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Agendum", b =>
                {
                    b.HasOne("FITCCRS2App.Services.Database.Takmicenje", "Takmicenje")
                        .WithMany("Agenda")
                        .HasForeignKey("TakmicenjeId")
                        .HasConstraintName("FK_Agenda_Takmicenje");

                    b.Navigation("Takmicenje");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.City", b =>
                {
                    b.HasOne("FITCCRS2App.Services.Database.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Dogadjaj", b =>
                {
                    b.HasOne("FITCCRS2App.Services.Database.Agendum", "Agenda")
                        .WithMany("Dogadjajs")
                        .HasForeignKey("AgendaId")
                        .HasConstraintName("FK_Dogadjaj_Agenda");

                    b.Navigation("Agenda");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Kategorija", b =>
                {
                    b.HasOne("FITCCRS2App.Services.Database.Takmicenje", "Takmicenje")
                        .WithMany("Kategorijas")
                        .HasForeignKey("TakmicenjeId")
                        .HasConstraintName("FK_Kategorija_Takmicenje");

                    b.Navigation("Takmicenje");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Komisija", b =>
                {
                    b.HasOne("FITCCRS2App.Services.Database.Kategorija", "Kategorija")
                        .WithMany("Komisijas")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK_Komisija_Kategorija");

                    b.Navigation("Kategorija");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Kriterij", b =>
                {
                    b.HasOne("FITCCRS2App.Services.Database.Kategorija", "Kategorija")
                        .WithMany("Kriterijs")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK_Kriterij_Kategorija");

                    b.Navigation("Kategorija");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.PredavacDogadjaj", b =>
                {
                    b.HasOne("FITCCRS2App.Services.Database.Dogadjaj", "Dogadjaj")
                        .WithMany()
                        .HasForeignKey("DogadjajId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FITCCRS2App.Services.Database.Predavac", "Predavac")
                        .WithMany()
                        .HasForeignKey("PredavacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dogadjaj");

                    b.Navigation("Predavac");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Projekat", b =>
                {
                    b.HasOne("FITCCRS2App.Services.Database.Kategorija", "Kategorija")
                        .WithMany("Projekats")
                        .HasForeignKey("KategorijaId")
                        .IsRequired()
                        .HasConstraintName("FK__Projekat__Katego__6442E2C9");

                    b.HasOne("FITCCRS2App.Services.Database.Tim", "Tim")
                        .WithMany("Projekats")
                        .HasForeignKey("TimId")
                        .IsRequired()
                        .HasConstraintName("FK__Projekat__TimID__65370702");

                    b.Navigation("Kategorija");

                    b.Navigation("Tim");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Rezultat", b =>
                {
                    b.HasOne("FITCCRS2App.Services.Database.Projekat", "Projekat")
                        .WithMany("Rezultats")
                        .HasForeignKey("ProjekatId")
                        .IsRequired()
                        .HasConstraintName("FK__Rezultat__Projek__681373AD");

                    b.Navigation("Projekat");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Sponzor", b =>
                {
                    b.HasOne("FITCCRS2App.Services.Database.Kategorija", "Kategorija")
                        .WithMany("Sponzors")
                        .HasForeignKey("KategorijaId")
                        .HasConstraintName("FK__Sponzor__Kategor__756D6ECB");

                    b.HasOne("FITCCRS2App.Services.Database.Skategorije", "Skategorije")
                        .WithMany("Sponzors")
                        .HasForeignKey("SkategorijeId")
                        .IsRequired()
                        .HasConstraintName("FK__Sponzor__SKatego__76619304");

                    b.Navigation("Kategorija");

                    b.Navigation("Skategorije");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Tim", b =>
                {
                    b.HasOne("FITCCRS2App.Services.Database.Takmicenje", "Takmicenje")
                        .WithMany("Tims")
                        .HasForeignKey("TakmicenjeId")
                        .IsRequired()
                        .HasConstraintName("FK__Tim__TakmicenjeI__6166761E");

                    b.Navigation("Takmicenje");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.User", b =>
                {
                    b.HasOne("FITCCRS2App.Services.Database.Country", "Citizenship")
                        .WithMany("Users")
                        .HasForeignKey("CitizenshipId");

                    b.HasOne("FITCCRS2App.Services.Database.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId");

                    b.Navigation("Citizenship");

                    b.Navigation("City");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.UserRole", b =>
                {
                    b.HasOne("FITCCRS2App.Services.Database.User", "User")
                        .WithMany("Roles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Agendum", b =>
                {
                    b.Navigation("Dogadjajs");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Kategorija", b =>
                {
                    b.Navigation("Komisijas");

                    b.Navigation("Kriterijs");

                    b.Navigation("Projekats");

                    b.Navigation("Sponzors");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Projekat", b =>
                {
                    b.Navigation("Rezultats");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Skategorije", b =>
                {
                    b.Navigation("Sponzors");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Takmicenje", b =>
                {
                    b.Navigation("Agenda");

                    b.Navigation("Kategorijas");

                    b.Navigation("Tims");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.Tim", b =>
                {
                    b.Navigation("Projekats");
                });

            modelBuilder.Entity("FITCCRS2App.Services.Database.User", b =>
                {
                    b.Navigation("Roles");
                });
#pragma warning restore 612, 618
        }
    }
}
